#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Token Authentication API.
"""
import requests
import sys

BASE_URL = 'http://127.0.0.1:8000'

def test_token_auth():
    """–¢–µ—Å—Ç Bearer Token –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print("=" * 60)
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Token Authentication")
    print("=" * 60)
    
    # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...")
    try:
        response = requests.post(
            f'{BASE_URL}/api/auth/token/',
            json={'username': 'admin', 'password': 'admin123'}
        )
        response.raise_for_status()
        token = response.json()['token']
        print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
        print("  1. –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (python manage.py runserver)")
        print("  2. –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin/admin123")
        sys.exit(1)
    
    # 2. –¢–µ—Å—Ç —Å —Ç–æ–∫–µ–Ω–æ–º
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —Å —Ç–æ–∫–µ–Ω–æ–º...")
    headers = {
        'Authorization': f'Token {token}',
        'Content-Type': 'application/json'
    }
    
    try:
        response = requests.get(
            f'{BASE_URL}/api/projects/',
            headers=headers
        )
        response.raise_for_status()
        projects = response.json()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {projects.get('count', 0)}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å —Ç–æ–∫–µ–Ω–æ–º: {e}")
        sys.exit(1)
    
    # 3. –¢–µ—Å—Ç –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É)
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É)...")
    try:
        response = requests.post(
            f'{BASE_URL}/api/projects/',
            json={'name': 'Test Project', 'is_active': True}
        )
        if response.status_code == 401:
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω (401)")
        else:
            print(f"‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–¥: {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 4. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º
    print("\n4. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º...")
    try:
        response = requests.post(
            f'{BASE_URL}/api/projects/',
            json={
                'name': 'Test Project',
                'description': '–°–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ Token Auth',
                'is_active': True
            },
            headers=headers
        )
        response.raise_for_status()
        project = response.json()
        print(f"‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω: ID {project.get('id')} - {project.get('name')}")
        
        # 5. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
        print("\n5. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Å —Ç–æ–∫–µ–Ω–æ–º...")
        response = requests.post(
            f'{BASE_URL}/api/tasks/',
            json={
                'title': 'Test Task',
                'description': '–°–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ Token Auth',
                'project': project.get('id'),
                'status': 'todo',
                'priority': 2
            },
            headers=headers
        )
        response.raise_for_status()
        task = response.json()
        print(f"‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: ID {task.get('id')} - {task.get('title')}")
        
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏: {e}")
        if hasattr(e.response, 'text'):
            print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {e.response.text}")
    
    # 6. –¢–µ—Å—Ç Basic Auth (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)
    print("\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Basic Authentication...")
    try:
        response = requests.get(
            f'{BASE_URL}/api/projects/',
            auth=('admin', 'admin123')
        )
        response.raise_for_status()
        print("‚úÖ Basic Auth —Ç–æ–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Basic Auth: {e}")
    
    print("\n" + "=" * 60)
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("=" * 60)
    print(f"\nüîë –í–∞—à —Ç–æ–∫–µ–Ω: {token}")
    print(f"\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö:")
    print(f"curl -H \"Authorization: Token {token}\" {BASE_URL}/api/projects/")
    print("\n–ò–ª–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print(f"export TOKEN=\"{token}\"")
    print(f"curl -H \"Authorization: Token $TOKEN\" {BASE_URL}/api/projects/")

if __name__ == '__main__':
    test_token_auth()

